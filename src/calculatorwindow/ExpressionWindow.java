/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculatorwindow;

import java.util.Observable;
import java.util.Observer;

/**
 *
 * @author Will_and_Sara
 */
public class ExpressionWindow extends javax.swing.JPanel implements Observer{
    private ParseTreeNodes.ParseTreeNode _Tree;
    private Parser.Parser _Parser;
    public ParseTreeNodes.ParseTreeNode GetTree(){return _Tree;}
    
    /**
     * Creates new form ExpressionWindow
     */
    public ExpressionWindow() {
        initComponents();
        //ParseTreeNodes.ParseTreeNode.InitializeParseTreeNode();
        _Parser = new Parser.Parser();
        _Parser.addObserver(this);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setName("ExpressionTextBox"); // NOI18N
        jTextArea1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextArea1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextArea1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea1KeyReleased

        if(!jTextArea1.getText().equals("")){
            //ParseTreeNodes.ParseTreeNode.ClearSyntaxErrors();
            _Tree = _Parser.Parse(jTextArea1.getText());
            if(_Parser.ContainsErrors()){
                for(String s : _Parser.GetErrors()){
                    System.out.println(s);
                }
            }
                if(_Tree.ContainsSyntaxErrors()){
                    for(String s : _Tree.GetSyntaxErrors()){
                        System.out.println(s);
                    }
                }else{
                    System.out.println(_Tree.ToString());
                    System.out.println(_Tree.Evaluate().Result());
                    if(_Tree.ContainsComputeErrors()){
                        for(String s :_Tree.GetComputeErrors()){
                            System.out.println(s);
                        }
                    }
                    this.firePropertyChange("Tree", _Tree, _Tree);//i believe this allows me to listen for this event in the parent.
                }
            

        }
    }//GEN-LAST:event_jTextArea1KeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        ParseTreeNodes.Token args = (ParseTreeNodes.Token)arg;
        if(args.GetToken()==ParseTreeNodes.Tokens.ERR){
            
        }else{
            System.out.println(args.GetString() + " at position " + args.GetPosition());
        }
        
    }
}
